
// creating an array to store the colours of buttons
var buttonColours=["red","blue","green","yellow"];

// to store the pattern according to random number generated
var gamePattern=[];

// to store the clicks of user
var userClickedPattern=[];

var started=false;
var level=0;

// getting info of 1st time keyPress to start the game
// use "one" to do so, or use the method of "if"
$(document).on("keypress",function()
{
    if(!started)
    {
        // start the random sequence generation after 1st keypress
        // initial lvl is 0
        // call the nextSequence func to generate 1st random seq
        $("h1").text("level "+level);
        nextSequence();
        started=true;
    }
});

// creating a function to play sound when button clicked
function playSound(name)
{
    var audio=new Audio("sounds/"+name+".mp3");
    audio.play();
}

// creating a function to add animation when button clicked
function animatePress(currentColour)
{
    // adding pressed class to the clicked button
    $("#"+currentColour).addClass("pressed");
    // removing the pressed class after 100 ms
    setTimeout(function()
    {
        $("#"+currentColour).removeClass("pressed");
    },100);
}

// adding click event to buttons
$(".btn").on("click",function()
    {
        // using "this" method to get the id attribue of the clicked button
        var userChosenColour=$(this).attr("id");
        // storing the id of the clicked button in the userClickedPattern array
        userClickedPattern.push(userChosenColour);
        // console.log(userClickedPattern);
        // after clicking, play sound, animate and check if the last clcik matched with last generated sequence or not
        playSound(userChosenColour);
        animatePress(userChosenColour);
        checkAnswer(userClickedPattern.length-1);
    }
);

// checking correct sequence
function checkAnswer(currentLevel)
{
    // if the last clicked button is same as that generated by random number, then its correct
    if(userClickedPattern[currentLevel]===gamePattern[currentLevel])
    {
    // console.log("success");
    // after all the eles were matched, call the nextSequence again to make next random choice after 1000ms
        if(gamePattern.length===userClickedPattern.length)
        {
            setTimeout(function()
            {
                nextSequence()
            },1000);
        }
    }
    // if the pattern was wrong by rthe user, then play wrong button, 
    // show game over
    // flash the screen
    // call the start over func
    else 
    // console.log("wrong");
    {
        playSound("wrong");
        $("body").addClass("game-over");
        setTimeout(function()
        {
            $("body").removeClass("game-over")
        },200);
        $("h1").text("Game Over, Press Any Key to Restart");
        startOver();
    }
}

// function to generate the random sequence
function nextSequence()
{
    // resetting the userClickedpattern array to goto next lvl, as next level will start counting from 1st button of prev sequence
    userClickedPattern=[];
    // increasing the level after each nextSequence func call
    level++;
    $("h1").text("level "+level);
    // generating random sequence
    var randomNumber=Math.floor(Math.random()*4);
    var randomChosenColour=buttonColours[randomNumber];
    gamePattern.push(randomChosenColour);

    // adding flash to random chosen color
    $("#"+randomChosenColour).fadeOut(100).fadeIn(100);

    // adding sound to the chosen color button
    playSound(randomChosenColour);
}

// restart the game
function startOver()
{
    // make lvl as 0, empty the gamePattern and wait for 1st keypress
    level=0;
    started=false;
    gamePattern=[];
}